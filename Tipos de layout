layout por padrao = android.support.constraint.ConstraintLayout (é o mais utilizado)

no exemplo abaixo estamos criando 3 botoes, um que vai pegar toda parte de cima, e outros 2 que vao ficar em baixo porém menores
quando estiver criando o botao usaremos o constraint para deixar o botao responsivo para que ao deitar a tela ele se redimensione junto
essa parte de redimensionar, colocar em tal lugar é legal fazer em xml, mais colcoar cor ou icone ou coisa mais simples podemos fazer nas propriedades mesmo


<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/white"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/bt1"
        android:layout_width="match_parent"
        android:layout_height="80dp"
        android:text="Button 1"
        android:layout_margin="20dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>

    <Button
        android:id="@+id/bt2"
        android:layout_width="100dp"
        android:layout_height="80dp"
        android:text="Button 2"
        android:layout_margin="20dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@id/bt1"/>

    <Button
        android:id="@+id/bt3"
        android:layout_width="100dp"
        android:layout_height="80dp"
        android:text="Button 3"
        android:layout_margin="20dp"
        app:layout_constraintStart_toEndOf="@id/bt2"
        app:layout_constraintTop_toBottomOf="@id/bt1"/>

    

</android.support.constraint.ConstraintLayout>
